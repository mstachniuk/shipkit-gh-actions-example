# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Set Environment variables if PR
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          echo "github.sha ${{ github.sha }}"
          echo "github.ref ${{ github.ref }}"
          echo "github.head_ref ${{ github.head_ref }}"
          echo "github.base_ref ${{ github.base_ref }}"
          echo "TRAVIS_PULL_REQUEST=true" >> $GITHUB_ENV
          echo "TRAVIS_BRANCH=$(echo ${{ github.head_ref }})" >> $GITHUB_ENV
          echo "TRAVIS_COMMIT_MESSAGE=$(git log -1 --pretty=%B ${{ github.head_ref }})" >> $GITHUB_ENV
      - name: Set Environment variables if not PR
        if: ${{ github.event_name != 'pull_request' }}
        run: |
          echo "TRAVIS_PULL_REQUEST=false" >> $GITHUB_ENV
          echo "TRAVIS_BRANCH=$(echo ${{ github.ref }} | sed 's@refs/heads/@@' )" >> $GITHUB_ENV
          echo "TRAVIS_COMMIT_MESSAGE=$(git log -1 --pretty=%B)" >> $GITHUB_ENV
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Build with Gradle
        run: ./gradlew build -s && ./gradlew ciPerformRelease
